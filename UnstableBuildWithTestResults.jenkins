
@Library("JenkinsBuildScripts") _

def failedStage = null

def committersToSlackNameLookup = [:]

pipeline {

	agent { label 'master' }
	
	environment {
		PROJECT_NAME = "JenkinsBuildScripts-Example"
		SLACK_CHANNEL = "#test123"
	}

	stages {

		stage('Process test results') {
			steps {
				script {
					failedStage = STAGE_NAME

					// Update timestamps for the XML file, to ensure that the JUnit report aggregator will process the report
					sh 'touch junit-example-results/two-successful-two-failed.xml'

					junit 'junit-example-results/two-successful-two-failed.xml'
				}
			}
		}
	}
	
	post {
		failure {
			sendSlackBuildFailedNotification(SLACK_CHANNEL, PROJECT_NAME, failedStage, committersToSlackNameLookup)
		}
		success {
			sendSlackBuildSucceededNotification(SLACK_CHANNEL, PROJECT_NAME, committersToSlackNameLookup)
		}
		unstable {
			sendSlackBuildFailedNotification(SLACK_CHANNEL, PROJECT_NAME, "Unstable", committersToSlackNameLookup)
		}
	}
}